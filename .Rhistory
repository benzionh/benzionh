data("women")
summary(women)
attach(women)
hist(height)
hist(weight)
data("BJsales")
summary(BJsales)
attach(BJsales)
hist(log(BJsales))
hist(log(height))
library(gapminder)
boxplot(height~weight)
boxplot(BJsales)
plot(height~weight)
plot(log(BJsales))
d->sample(1:10,20)
d
View(BJsales)
View(BJsales.lead)
view(d)
Class<-sample(c("1","2","3","4","5"),20,replace = TRUE)
Scores<-sample(1:100,20)
df2<-data.frame(Class,Scores)
df2
data("women")
summary(women)
attach(women)
hist(height)
hist(weight)
data("BJsales")
summary(BJsales)
attach(BJsales)
hist(log(BJsales))
hist(log(height))
library(gapminder)
boxplot(height~weight)
boxplot(BJsales)
plot(height~weight)
plot(log(BJsales))
d<-sample(1:10,20)
d
data("women")
summary(women)
attach(women)
hist(height)
hist(weight)
data("BJsales")
summary(BJsales)
attach(BJsales)
hist(log(BJsales))
hist(log(height))
library(gapminder)
boxplot(height~weight)
boxplot(BJsales)
plot(height~weight)
plot(log(BJsales))
d<-sample(1:10,10)
d
data("women")
summary(women)
attach(women)
hist(height)
hist(weight)
data("BJsales")
summary(BJsales)
attach(BJsales)
hist(log(BJsales))
hist(log(height))
library(gapminder)
boxplot(height~weight)
boxplot(BJsales)
plot(height~weight)
plot(log(BJsales))
d<-sample(1:20,10)
d
nrow(gapminder)
nrow(women)
View(women)
library(dplyr)
women %>% select(1) ->newdf
View(newdf)
?datasets
View(datasets)
datasets::EuStockMarkets
datasets::HairEyeColor
#save
dev.off()
#create the predictor and response variable
x<-c(151,174,138,186,128,136,179,163,152,131)
y<-c(63,81,56,91,47,57,76,72,62,48)
relation<-lm(y~x)
#chart file name
png(file="linearregression.png")
#plot
plot(y,x,col="blue",main="height & weight regression",abline(lm(x~y)),cex=1.3,pch=16,xlab="weight in kg",ylab="height in cm")
#save
dev.off()
view (diamonds)
?diamonds
library(ggplot)
?ggplot
read.csv("HOOD.csv")
read.csv("C:\Users\sa\Documents\Projects\gender_submission.csv")
read.csv("C:/Users/sa/Documents/Projects/gender_submission.csv")
read.csv("C:/Users/sa/Documents/Projects/gender_submission.csv") ->gender
View(gender)
table(gender$Survived)
read.csv("C:/Users/sa/Downloads/archive/tested.csv") -> tes
View(tes)
table(tes$Survived)
table(tes$Name)
table(tes$Sex)
reticulate::repl_python()
print("hello")
yes
print("hello")
reticulate::repl_python()
setwd("~/facebook metrics project")
# retrieve the dataset
data <- read.csv("dataset_Facebook.csv",sep = ";")
View(data)
# data manipulation
library(dplyr)
dataset <- data %>% select(Lifetime.Post.Total.Impressions,
Page.total.likes,
Type,
Post.Weekday,
Paid,
comment,
like,
share)
# data structure
str(dataset)
dataset$Type <- as.factor(dataset$Type)
dataset$Post.Weekday <- as.factor(dataset$Post.Weekday)
# transform variables
dataset$Lifetime.Post.Total.Impressions <- log(dataset$Lifetime.Post.Total.Impressions)
dataset$Page.total.likes<- log(dataset$Page.total.likes)
# linear regression model
model <- lm(Lifetime.Post.Total.Impressions~.,
data = dataset)
summary(model)
setwd("~/facebook metrics project")
# retrieve the dataset
data <- read.csv("dataset_Facebook.csv",sep = ";")
View(data)
# data manipulation
library(dplyr)
dataset <- data %>% select(Lifetime.Post.Total.Impressions,
Page.total.likes,
Type,
Post.Weekday,
Paid,
comment,
like,
share)
# data structure
str(dataset)
dataset$Type <- as.factor(dataset$Type)
dataset$Post.Weekday <- as.factor(dataset$Post.Weekday)
# transform variables
dataset$Lifetime.Post.Total.Impressions <- log(dataset$Lifetime.Post.Total.Impressions)
dataset$Page.total.likes<- log(dataset$Page.total.likes)
# linear regression model
model <- lm(Lifetime.Post.Total.Impressions~.,
data = dataset)
summary(model)
b0<-coef(model)[1]
b0
b1<-coef(model)[2];b1
a<-data.frame(dataset$Post.Weekday=5,dataset$Type="Photo",dataset$Paid=0,dataset$comment=5,dataset$like=80,dataset$share=19)
a<-data.frame(dataset$Post.Weekday="5",dataset$Type="Photo",dataset$Paid="0",dataset$comment=5,dataset$like=80,dataset$share=19)
a<-(dataset$Post.Weekday="5",dataset$Type="Photo",dataset$Paid="0",dataset$comment=5,dataset$like=80,dataset$share=19)
a<-(dataset$Post.Weekday<-"5",dataset$Type="Photo",dataset$Paid="0",dataset$comment=5,dataset$like=80,dataset$share=19)
a<-dataset$Post.Weekday<-"5"
predictions<-predict(model,a);predictions
a<-data.frame(dataset$Post.Weekday<-"5")
predictions<-predict(model,a);predictions
a<-data.frame(dataset$Post.Weekday<-"5",dataset$Type="Photo",dataset$Paid="0",dataset$comment=5,dataset$like=80,dataset$share=19)
a<-data.frame(dataset$Post.Weekday<-"5",dataset$Type<-"Photo",dataset$Paid<-"0",dataset$comment<-5,dataset$like<-80,dataset$share<-19)
predictions<-predict(model,a);predictions
a<-data.frame(dataset$Page.total.likes<-139444,dataset$Post.Weekday<-"5",dataset$Type<-"Photo",dataset$Paid<-"0",dataset$comment<-5,dataset$like<-80,dataset$share<-19)
predictions<-predict(model,a);predictions
a
View(a)
a<-data.frame(dataset$Page.total.likes<-159444,dataset$Post.Weekday<-"5",dataset$Type<-"Photo",dataset$Paid<-"0",dataset$comment<-5,dataset$like<-80,dataset$share<-19)
predictions<-predict(model,a);predictions
?predict
predictions<-predict(model,a,data=dataset);predictions
plot(model)
predictions<-predict(model,a,data=dataset);predictions
a<-data.frame(dataset$Post.Weekday<-"5",dataset$Page.total.likes<-159444,dataset$Type<-"Photo",dataset$Paid<-"0",dataset$comment<-5,dataset$like<-80,dataset$share<-19)
predictions<-predict(model,a,data=dataset);predictions
a<-data.frame(dataset$Post.Weekday<-"5",dataset$Page.total.likes<-159444,dataset$Type<-"Photo",dataset$Paid<-"0",dataset$comment<-5,dataset$like<-80,dataset$share<-19)
predictions<-predict(model,a);predictions
a<-data.frame(Lifetime.Post.Total.Impressions<-13039302)
predictions<-predict(model,a);predictions
a<-data.frame(Page.total.likes<-13039302)
predictions<-predict(model,a);predictions
a<-data.frame(Page.total.likes<-13039302,Type<-"Photo",Post.Weekday<-"5",Paid<-"0",comment<-45,like<-100,share<-200)
predictions<-predict(model,a);predictions
a<-data.frame(Page.total.likes<-13039302,Type<-"Photo",Post.Weekday<-"5",Paid<-0,comment<-45,like<-100,share<-200)
predictions<-predict(model,a);predictions
a<-data.frame(Page.total.likes<-13000,Type<-"Photo",Post.Weekday<-"5",Paid<-1,comment<-145,like<-100,share<-200)
predictions<-predict(model,a);predictions
setwd("~/facebook metrics project")
# retrieve the dataset
data <- read.csv("dataset_Facebook.csv",sep = ";")
View(data)
# data manipulation
library(dplyr)
dataset <- data %>% select(Lifetime.Post.Total.Impressions,
Page.total.likes,
Type,
Post.Weekday,
Paid,
comment,
like,
share)
# data structure
str(dataset)
dataset$Type <- as.factor(dataset$Type)
dataset$Post.Weekday <- as.factor(dataset$Post.Weekday)
# transform variables
dataset$Lifetime.Post.Total.Impressions <- log(dataset$Lifetime.Post.Total.Impressions)
dataset$Page.total.likes<- log(dataset$Page.total.likes)
# linear regression model
model <- lm(Lifetime.Post.Total.Impressions~.,
data = dataset)
summary(model)
b0<-coef(model)[1]
b0
b1<-coef(model)[2];b1
a<-data.frame(Page.total.likes<-13000,Type<-"Photo",Post.Weekday<-"5",Paid<-1,comment<-145,like<-100,share<-200)
predictions<-predict(model,a);predictions
plot(model,abline(lm(Lifetime.Post.Total.Impressions~.,data = dataset)))
setwd("~/facebook metrics project")
# retrieve the dataset
data <- read.csv("dataset_Facebook.csv",sep = ";")
View(data)
# data manipulation
library(dplyr)
dataset <- data %>% select(Lifetime.Post.Total.Impressions,
Page.total.likes,
Type,
Post.Weekday,
Paid,
comment,
like,
share)
# data structure
str(dataset)
dataset$Type <- as.factor(dataset$Type)
dataset$Post.Weekday <- as.factor(dataset$Post.Weekday)
# transform variables
#dataset$Lifetime.Post.Total.Impressions <- log(dataset$Lifetime.Post.Total.Impressions)
#dataset$Page.total.likes<- log(dataset$Page.total.likes)
# linear regression model
model <- lm(Lifetime.Post.Total.Impressions~.,
data = dataset)
summary(model)
b0<-coef(model)[1]
b0
b1<-coef(model)[2];b1
a<-data.frame(Page.total.likes<-139441,Type<-"Photo",Post.Weekday<-"5",Paid<-1,comment<-145,like<-100,share<-200)
predictions<-predict(model,a);predictions
plot(model,abline(lm(Lifetime.Post.Total.Impressions~.,data = dataset)))
plot(model,abline(lm(Lifetime.Post.Total.Impressions~.,data = dataset)))
plot(model,abline(lm(Lifetime.Post.Total.Impressions~.)))
plot(model,abline(lm(Lifetime.Post.Total.Impressions~.,data = dataset)))
